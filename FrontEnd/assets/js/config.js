// assets/js/config.js
// üëâ S·ª≠a PRODUCTION_API theo h·∫° t·∫ßng c·ªßa b·∫°n.
// N·∫øu FE & BE chung domain (API ƒë·∫∑t ·ªü /Backend/public) th√¨ d√πng ƒë∆∞·ªùng d·∫´n t∆∞∆°ng ƒë·ªëi: "/Backend/public"
const PRODUCTION_API = "https://api.ten-mien-cua-ban.com"; // ho·∫∑c "/Backend/public"
const LOCAL_API      = "http://127.0.0.1:8000";

// Helper: root domain (vd: www.example.com -> example.com)
function rootDomain(host){
  const parts = host.split('.'); 
  return parts.length >= 2 ? parts.slice(-2).join('.') : host;
}

// 1) ∆Øu ti√™n query ?api=...  2) localStorage('api_base')  3) t·ª± nh·∫≠n theo hostname
(function initConfig(){
  const qs = new URLSearchParams(location.search);
  const fromQuery   = qs.get('api');
  const fromStorage = localStorage.getItem('api_base');

  let base;
  const h = location.hostname;

  if (fromQuery) {
    base = fromQuery;
    localStorage.setItem('api_base', base);
  } else if (fromStorage) {
    base = fromStorage;
  } else if (
    h === 'localhost' || h === '127.0.0.1' || h.endsWith('.local') || h.endsWith('.test')
  ) {
    base = LOCAL_API;                // ƒëang ch·∫°y local
  } else {
    // s·∫£n xu·∫•t: n·∫øu b·∫°n d√πng subdomain api.<domain>, c√≥ th·ªÉ ƒëo√°n t·ª± ƒë·ªông
    const guess = `https://api.${rootDomain(h)}`;
    base = PRODUCTION_API || guess;  // d√πng PRODUCTION_API n·∫øu ƒë√£ set
  }

  // T·∫°o global
  window.CONFIG = {
    BASE_URL: base,
    setApiBase(v){ 
      if(!v) return;
      localStorage.setItem('api_base', v); 
      window.CONFIG.BASE_URL = v; 
      console.info('[CONFIG] API base =>', v);
    }
  };

  // T·ª± ki·ªÉm tra nhanh: n·∫øu base hi·ªán t·∫°i kh√¥ng ph·∫£n h·ªìi s·∫Ω th·ª≠ base c√≤n l·∫°i
  window.API_READY = (async () => {
    async function ok(u){
      try{
        const ctl = new AbortController();
        const t = setTimeout(()=>ctl.abort(), 1500);
        const res = await fetch(u + '/tours?page=1&page_size=1', {signal: ctl.signal});
        clearTimeout(t);
        return res.ok;
      }catch{ return false; }
    }
    if (await ok(window.CONFIG.BASE_URL)) return;

    // Th·ª≠ c√°c ph∆∞∆°ng √°n d·ª± ph√≤ng:
    const backups = [];
    if (window.CONFIG.BASE_URL !== PRODUCTION_API) backups.push(PRODUCTION_API);
    if (window.CONFIG.BASE_URL !== LOCAL_API)      backups.push(LOCAL_API);
    if (!backups.includes('/Backend/public')) backups.push('/Backend/public');

    for (const b of backups){
      if (!b) continue;
      if (await ok(b)){ window.CONFIG.setApiBase(b); return; }
    }
  })();
})();
